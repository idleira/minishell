TODO:
>>>>>>>>>>>>>>>>>>>IRA

1. Check Signals(examples from eval sheet):
	ctrl-C in an empty prompt should display a new line with a new prompt.
	ctrl-\ in an empty prompt should not do anything.
	ctrl-D in an empty prompt should quit minishell --> RELAUNCH!
	ctrl-C in a prompt after you wrote some stuff should display a new line with a new prompt.
	The buffer should be clean too. Press "Enter" to make sure nothing from the previous line is executed.
	ctrl-D in a prompt after you wrote some stuff should not do anything.
	ctrl-\ in a prompt after you wrote some stuff should not do anything.
	Try ctrl-C after running a blocking command like cat without arguments or grep “something“.
	Try ctrl-\ after running a blocking command like cat without arguments or grep “something“.
	Try ctrl-D after running a blocking command like cat without arguments or grep “something“.


***********Prompt built after incorrect cmd + ctr + c**********

mzhukova | minishell$ grep TEST


^C
mzhukova | minishell$ mzhukova | minishell$ ^C
mzhukova | minishell$ 
***************************************************************

*************pipes in parsing**************************

mzhukova | minishell$ ls -la | < file1 cat > file3
bash: syntax error: unexpected token `|'

*******************************************************

************Parsing quotes*****************************

1. 2quotes together should be handled as an empty string:

mzhukova | minishell$ echo Hello""World
Hello""World
mzhukova | minishell$ echo Hello''World
Hello''World

2.
mzhukova | minishell$ echo "'"'"'"'"
bash: syntax error: unclosed double quotes

***********************************************************

TODO:
>>>>>>>>>>>>>>>>>>>MARIANNA

****************execution exit************************************

1. Implement "echo $?". Should work with correct cmds and incorrect cmd. Gather all of the possible exit codes in bash and change all of them accordingly.
	1.1 Handle $? + $?
2. exit 100 (implement exit with args)

*****************************************************************


**************Execution + environment ***************************

1.last env var in env should be the last executed cmd (always env)
2. Fix "unset"
3. Implement heredoc

*****************************************************************


*************Echo with variables*********************************
1. echo "$USER"$USER$USER
*****************************************************************